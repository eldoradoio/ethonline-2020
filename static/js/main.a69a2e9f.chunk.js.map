{"version":3,"sources":["logo.webp","assets/types/ElDoradoSavingAccountsFactory.ts","assets/types/IElDoradoSavingsProviderFactory.ts","assets/types/Erc20DetailedFactory.ts","accounts/index.ts","AsyncButton.tsx","Messages.tsx","Balance.tsx","constants.ts","DepositAccount.tsx","DepositTab.tsx","TabSwitch.tsx","WithdrawTokens.tsx","WithdrawTab.tsx","Connected.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ElDoradoSavingAccountsFactory","signer","_abi","_bytecode","overrides","address","signerOrProvider","Contract","ContractFactory","inputs","payable","stateMutability","type","constant","internalType","name","outputs","IElDoradoSavingsProviderFactory","Erc20DetailedFactory","anonymous","indexed","portis","Portis","provider","ethers","providers","Web3Provider","getSigner","accounts","connect","getConnectedAddress","a","getAddress","console","log","getTokenName","tokenAddress","erc20","getTokenBalance","getProviderByToken","savingsProvider","balanceOf","decimals","allowance","balance","getBalance","BigNumber","from","approve","pow","sub","tx","wait","amount","depositOn","gasLimit","withdrawOn","hex_to_ascii","str1","hex","toString","str","n","length","String","fromCharCode","parseInt","substr","getTransactionResult","txHash","getTransaction","call","blockNumber","code","reason","getProvidersAddressList","providersCount","providersTasks","Array","toNumber","x","i","getProviderByIndex","Promise","all","providerAddresses","getProviderData","providerAddress","savingProvider","getProviderName","getProviderId","id","getListOfDepositableTokens","depositableAddresses","map","depositableNames","depositable","addresses","AsyncButton","onClick","disabled","children","useState","processing","setProcessing","style","minWidth","className","result","ActionTypes","CurrentMessagingState","MessagingContext","React","createContext","state","dispatcher","messaging","action","ADD_MESSAGE","message","REMOVE_MESSAGE","splice","index","Messages","useContext","Toast","key","data","body","ago","Date","now","timestamp","role","aria-live","aria-atomic","aria-label","aria-hidden","Balance","tokenName","display","flexGrow","flexBasis","verticalAlign","lineHeight","textAlign","tb","Math","by","padEnd","div","toFixed","formatTokenBalance","width","paddingLeft","fontSize","toLocaleUpperCase","DepositAccount","token","depositAmount","setDepositAmount","tokenBalance","setTokenBalance","useEffect","then","tryCall","sucessMessage","transactionHash","marginTop","gt","Fragment","onChange","value","to","base","parseFloat","mul","toBigNumber","target","undefined","deposit","DepositTap","accountItems","TabSwitch","labels","tabIndex","setTabIndex","switches","WithdrawTokens","setTokenName","selectedToken","setSelectedToken","withdrawAmount","setWithdrawAmount","tokenSavingsBalance","setTokenSavingsBalance","getTokenSavingsBalance","flexShrink","defaultValue","e","selected","withdraw","WithdrawTab","Connected","setProviders","getAllProviders","formatAddress","App","connectedAddress","setConnectedAddress","useReducer","dispatch","Provider","src","logo","height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a69a2e9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f01d1720.webp\";","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ElDoradoSavingAccounts } from \"./ElDoradoSavingAccounts\";\n\nexport class ElDoradoSavingAccountsFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<ElDoradoSavingAccounts> {\n    return super.deploy(overrides || {}) as Promise<ElDoradoSavingAccounts>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): ElDoradoSavingAccounts {\n    return super.attach(address) as ElDoradoSavingAccounts;\n  }\n  connect(signer: Signer): ElDoradoSavingAccountsFactory {\n    return super.connect(signer) as ElDoradoSavingAccountsFactory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ElDoradoSavingAccounts {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ElDoradoSavingAccounts;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"providerAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"addProvider\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_providerIndex\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"depositAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"depositOn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"getBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"getEarnings\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getProviderByIndex\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"getProviderByToken\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"providersCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdrawOn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5061003c6040518060600160405280602a8152602001611005602a913961004160201b610d2c1760201c565b61016e565b610142816040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561008857808201518184015260208101905061006d565b50505050905090810190601f1680156100b55780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061014560201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b610e888061017d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063d0659d7511610066578063d0659d75146102b1578063f7888aec146102cf578063f8b2cb4f14610347578063fb3a38411461039f578063fbdbafad146104015761009e565b80630fd61f42146100a3578063131b9c041461010f5780633116b092146101675780639755f5be146101c9578063a50e30711461022d575b600080fd5b6100f9600480360360608110156100b957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061046f565b6040518082815260200191505060405180910390f35b6101516004803603602081101561012557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061048e565b6040518082815260200191505060405180910390f35b6101b36004803603604081101561017d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c6565b6040518082815260200191505060405180910390f35b61022b600480360360408110156101df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105e4565b005b61026f6004803603602081101561024357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610736565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b961079f565b6040518082815260200191505060405180910390f35b610331600480360360408110156102e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107b0565b6040518082815260200191505060405180910390f35b6103896004803603602081101561035d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c4565b6040518082815260200191505060405180910390f35b6103eb600480360360408110156103b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107d7565b6040518082815260200191505060405180910390f35b61042d6004803603602081101561041757600080fd5b81019080803590602001909291905050506107f5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006104853361047e866107f5565b8585610812565b90509392505050565b6000806000905060008090505b6104a56000610966565b8110156105bc576104c081600061097790919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16633f47ab2933866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561057057600080fd5b505afa158015610584573d6000803e3d6000fd5b505050506040513d602081101561059a57600080fd5b810190808051906020019092919050505082019150808060010191505061049b565b5080915050919050565b60006105dc336105d585610736565b85856109bb565b905092915050565b8173ffffffffffffffffffffffffffffffffffffffff166380b2edd8826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561066357600080fd5b505af1158015610677573d6000803e3d6000fd5b505050506040513d602081101561068d57600080fd5b81019080805190602001909291905050505081600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610731826000610b0f90919063ffffffff16565b505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107ab6000610966565b905090565b60006107bc8383610bdf565b905092915050565b60006107d03383610bdf565b9050919050565b60006107ed336107e685610736565b8585610812565b905092915050565b600061080b82600061097790919063ffffffff16565b9050919050565b6000808473ffffffffffffffffffffffffffffffffffffffff16638340f5498786866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156108d057600080fd5b505af11580156108e4573d6000803e3d6000fd5b505050506040513d60208110156108fa57600080fd5b8101908080519060200190929190505050905080600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080915050949350505050565b600081600101805490509050919050565b600082600101828154811061098857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663d9caed128786866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610a7957600080fd5b505af1158015610a8d573d6000803e3d6000fd5b505050506040513d6020811015610aa357600080fd5b8101908080519060200190929190505050905080600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080915050949350505050565b6000610b1b8383610cdd565b610bd457826001018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019050610bd9565b600090505b92915050565b6000610bea82610736565b73ffffffffffffffffffffffffffffffffffffffff1663d4fac45d33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610c9a57600080fd5b505afa158015610cae573d6000803e3d6000fd5b505050506040513d6020811015610cc457600080fd5b8101908080519060200190929190505050905092915050565b6000808360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415905092915050565b610e27816040516024018080602001828103825283818151815260200191508051906020019080838360005b83811015610d73578082015181840152602081019050610d58565b50505050905090810190601f168015610da05780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e2a565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa505050505056fea265627a7a72315820d937e2763dce9e4b14429e05de09c382086bfea3a861fa62791020c571a97a7664736f6c634300051000324465706c6f79696e6720456c446f7261646f536176696e67734163636f756e747320436f6e7472616374\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IElDoradoSavingsProvider } from \"./IElDoradoSavingsProvider\";\n\nexport class IElDoradoSavingsProviderFactory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IElDoradoSavingsProvider {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IElDoradoSavingsProvider;\n  }\n}\n\nconst _abi = [\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"approveToken\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"getBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"getDeposited\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"getEarnings\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getListOfDepositableTokens\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"\",\n        type: \"address[]\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getListOfWithdrawableTokens\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"\",\n        type: \"address[]\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getProviderId\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getProviderName\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getProviderVersion\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_tokenAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { Erc20Detailed } from \"./Erc20Detailed\";\n\nexport class Erc20DetailedFactory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Erc20Detailed {\n    return new Contract(address, _abi, signerOrProvider) as Erc20Detailed;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"decimals\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","import { BigNumber, ethers } from 'ethers'\n\nimport Portis from '@portis/web3';\nimport Web3 from 'web3';\n\n\n\nimport { ElDoradoSavingAccountsFactory } from '../assets/types/ElDoradoSavingAccountsFactory'\nimport { IElDoradoSavingsProviderFactory } from '../assets/types/IElDoradoSavingsProviderFactory';\n\nimport { Erc20DetailedFactory } from '../assets/types/Erc20DetailedFactory'\n\nconst network = 'ropsten'\n\nconst portis = new Portis('89eb3ac5-6738-42b7-98c0-3e3ca4a39853', network);\nconst provider = new ethers.providers.Web3Provider(portis.provider)\nconst signer = provider.getSigner()\n\n\nconst accounts = ElDoradoSavingAccountsFactory.connect('0x6Fb4026895de9eB79044ecaCCEf99168B49cF13C', signer)\n\n\nexport async function getConnectedAddress(): Promise<string> {\n    const address = await signer.getAddress()\n    console.log(address)\n    return address\n}\n\nexport function getBalance(tokenAddress: string): Promise<BigNumber> {\n    //getEarnings\n    return accounts.getBalance(tokenAddress)\n}\n\nexport async function getAccounts(): Promise<string[]> {\n    return ['0xb5e5d0f8c0cba267cd3d7035d6adc8eba7df7cdd', '0xb404c51bbc10dcbe948077f18a4b8e553d160084'] //these should come from the contract\n}\n\nexport async function getTokenName(tokenAddress: string): Promise<string> {\n    const erc20 = Erc20DetailedFactory.connect(tokenAddress, provider)\n    return await erc20.name()\n}\n\nexport async function getTokenBalance(tokenAddress: string): Promise<TokenBalance> {\n    const erc20 = Erc20DetailedFactory.connect(tokenAddress, provider)\n    const address = await getConnectedAddress()\n    const savingsProvider = await accounts.getProviderByToken(tokenAddress)\n\n    return {\n        balance: await erc20.balanceOf(address),\n        decimals: await erc20.decimals(),\n        allowance: await erc20.allowance(address, savingsProvider)\n    }\n}\n\nexport async function getTokenSavingsBalance(tokenAddress: string): Promise<TokenBalance> {\n    console.log('getting balance from', tokenAddress)\n    const balance = await accounts.getBalance(tokenAddress)\n    console.log('got balance from', tokenAddress, balance)\n    return {\n        balance: await balance,\n        decimals: 18,\n        allowance: BigNumber.from('1')\n    }\n}\n\nexport async function approve(tokenAddress: string): Promise<void> {\n    const erc20 = Erc20DetailedFactory.connect(tokenAddress, signer)\n    const savingsProvider = await accounts.getProviderByToken(tokenAddress)\n    const tx = await erc20.approve(savingsProvider, BigNumber.from('2').pow('256').sub('1'))\n    await tx.wait()\n}\n\n\nexport async function deposit(tokenAddress: string, amount: BigNumber): Promise<void> {\n    const tx = await accounts.depositOn(tokenAddress, amount, {\n        gasLimit: 850000\n    })\n    await tx.wait()\n}\n\n\nexport async function withdraw(tokenAddress: string, amount: BigNumber): Promise<void> {\n    console.log('withdrawing', amount)\n    const tx = await accounts.withdrawOn(tokenAddress, amount, {\n        gasLimit: 850000\n    })\n    await tx.wait()\n}\n\nfunction hex_to_ascii(str1: string) {\n    var hex = str1.toString();\n    var str = '';\n    for (var n = 0; n < hex.length; n += 2) {\n        str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n    }\n    return str;\n}\n\n\nexport async function getTransactionResult(txHash: string) {\n    const tx = await provider.getTransaction(txHash)\n    let code = await provider.call(tx, tx.blockNumber)\n    let reason = hex_to_ascii(code.substr(138))\n    return reason\n}\n\nexport type TokenBalance = {\n    balance: BigNumber\n    decimals: number\n    allowance: BigNumber\n}\n\nexport async function getProvidersAddressList() {\n    const providersCount = await accounts.providersCount()\n    const providersTasks = Array.from({ length: providersCount.toNumber() }, (x, i) => accounts.getProviderByIndex(i))\n    const providerAddresses = await Promise.all(providersTasks)\n    return providerAddresses\n}\n\nexport type TokenData = { name: string, address: string }\nexport type ProviderData = {\n    id: string\n    //version: string\n    name: string\n    depositable: TokenData[]\n}\n\nexport async function getProviderData(providerAddress: string): Promise<ProviderData> {\n    const savingProvider = IElDoradoSavingsProviderFactory.connect(providerAddress, provider);\n    const name = await savingProvider.getProviderName()\n    const id = await savingProvider.getProviderId()\n    const depositableAddresses = await savingProvider.getListOfDepositableTokens()\n    const depositableNames = await Promise.all(depositableAddresses.map(getTokenName))\n    const depositable = depositableAddresses\n        .map((address, i) => ({\n            name: depositableNames[i],\n            address: address\n        }))\n\n    //const balance = await accounts.getBalance()\n\n    return {\n        id: id,\n        name: name,\n        depositable: depositable\n    }\n}\n\nexport async function getAllProviders() {\n    const addresses = await getProvidersAddressList();\n    const providers = await Promise.all(addresses.map(getProviderData))\n    return providers\n}","import React, { useState } from 'react'\nimport './AsyncButton.css';\n\ntype AsyncButtonProps = {\n    onClick: Function\n    disabled: boolean\n    children: any\n}\n\nexport function AsyncButton({ onClick, disabled, children }: AsyncButtonProps) {\n    const [processing, setProcessing] = useState<boolean>(false)\n    if (processing) {\n        return (\n            <button style={{ minWidth: '9rem' }} >\n                <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\n            </button>\n        );\n    }\n    return <button style={{ minWidth: '9rem' }} disabled={disabled || processing} onClick={async () => {\n        setProcessing(true)\n        const result = onClick()\n        if (result instanceof Promise) {\n            setProcessing(true)\n            await result\n            setProcessing(false)\n        } else {\n            setProcessing(false)\n        }\n    }} >{children}</button>\n}","import React, { useContext, useReducer } from \"react\";\nimport './Messages.css';\n\n\n\nexport enum ActionTypes {\n    ADD_MESSAGE = 'ADD_MESSAGE',\n    REMOVE_MESSAGE = 'REMOVE_MESSAGE',\n}\n\ninterface MessageAction {\n    type: typeof ActionTypes.ADD_MESSAGE\n    message: ToastInfo\n}\n\ninterface RemoveMessageAction {\n    type: typeof ActionTypes.REMOVE_MESSAGE\n    index: number\n}\n\nexport type MessasingActionTypes =\n    | MessageAction\n    | RemoveMessageAction\n\ntype ToastInfo = {\n    body: string\n    timestamp: number\n    type: \"error\" | \"info\" | \"success\"\n}\ntype MessagingState = ToastInfo[]\n\nexport const CurrentMessagingState: MessagingState = []\n\n\nexport const MessagingContext = React.createContext<{ state: MessagingState, dispatcher: React.Dispatch<MessasingActionTypes> }>({\n    state: CurrentMessagingState,\n    dispatcher: () => null\n})\n\n\nexport const messaging = (state: MessagingState, action: MessasingActionTypes) => {\n\n    console.log('messaging', state, action)\n    switch (action.type) {\n        case ActionTypes.ADD_MESSAGE:\n            return [...state, action.message]\n        case ActionTypes.REMOVE_MESSAGE:\n            state.splice(action.index)\n            return [...state];\n    }\n}\n\n\n\nexport function Messages() {\n    const { state } = useContext(MessagingContext)\n\n    return (\n        <div className=\"toasts\">\n            {state.map((x, i) => (\n                <Toast index={i} key={`messageindex${i}`} data={x}>{x.body}</Toast>\n            ))}\n        </div>\n    )\n}\n\ntype ToastProps = {\n    index: number\n    data: ToastInfo\n    children: any\n}\n\nexport function Toast({ data, children, index }: ToastProps) {\n    const { dispatcher } = useContext(MessagingContext)\n    const ago = (Date.now() - data.timestamp) / 1000\n    const closeMessage = () => {\n        dispatcher({ type: ActionTypes.REMOVE_MESSAGE, index: index })\n    }\n\n    return (\n        <div className={\"toast show \" + data.type} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n            <div className=\"toast-header\">\n                {/* <img src=\"...\" className=\"rounded mr-2\" alt=\"...\" /> */}\n                <strong className=\"title\"> </strong>\n                <small className=\"time\">{ago} seconds ago</small>\n                <button type=\"button\" aria-label=\"Close\" onClick={closeMessage}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div className=\"body\">\n                {children}\n            </div>\n        </div>\n    )\n}\n","import { BigNumber } from \"ethers\"\nimport React from \"react\"\nimport { TokenBalance } from \"./accounts\"\nimport { FORMATTED_DECIMALS } from \"./constants\"\n\nexport type BalanceProps = {\n    tokenName?: string\n    balance?: TokenBalance\n}\nexport function Balance({ tokenName, balance }: BalanceProps) {\n    const formatTokenBalance = (tb: TokenBalance): string => {\n        //TODO: import a better bignumber than the ethersjs one.. w(ﾟДﾟ)w\n        const formattedDecimals = FORMATTED_DECIMALS\n        const decimals = Math.pow(10, formattedDecimals)\n        const by = BigNumber.from('1' + ''.padEnd(tb.decimals - formattedDecimals, '0'))\n\n        return (tb.balance.div(by).toNumber() / decimals).toFixed(formattedDecimals)\n    }\n\n    return (\n        <span style={{ display: 'flex', flexGrow: 1, flexBasis: '1rem', verticalAlign: 'middle', lineHeight: '3.5rem' }}>\n            <span style={{ flexGrow: 4, textAlign: 'right' }}>\n                {balance ? formatTokenBalance(balance) : '---'}\n            </span>\n            {tokenName ? \n            <span style={{ width: '6rem', textAlign: 'left', paddingLeft: '1rem', fontSize: '1rem' }}>\n                {tokenName.toLocaleUpperCase()}\n            </span>\n            : ''}\n        </span>\n    )\n}","export const FORMATTED_DECIMALS = 2","import React, { Props, useContext, useEffect, useState } from 'react'\nimport { BigNumber } from 'ethers';\nimport { approve, deposit, getTokenBalance, getTokenName, getTokenSavingsBalance, getTransactionResult, TokenBalance, TokenData, withdraw } from './accounts';\nimport { AsyncButton } from './AsyncButton';\nimport { ActionTypes, MessagingContext } from './Messages';\nimport { FORMATTED_DECIMALS } from './constants';\nimport { Balance } from './Balance';\n\ntype AccountProps = {\n    token: TokenData\n}\n\nconst toBigNumber = (value: any, to: number) => {\n    const decimals = Math.pow(10, FORMATTED_DECIMALS)\n    let base = ((typeof value == 'number') ? value : (typeof value === 'string' ? parseFloat(value) : BigNumber.from(value).toNumber()))\n    base = base * decimals\n\n    const by = BigNumber.from('1' + ''.padEnd(to - FORMATTED_DECIMALS, '0'))\n    return BigNumber.from(base.toFixed(0)).mul(by)\n\n}\n\nexport function DepositAccount({ token, }: AccountProps) {\n    const tokenAddress = token.address\n    const tokenName = token.name\n\n    const [depositAmount, setDepositAmount] = useState<BigNumber>();\n    const [withdrawAmount, setWithdrawAmount] = useState<BigNumber>();\n\n    const [tokenBalance, setTokenBalance] = useState<TokenBalance>()\n    const [tokenSavingsBalance, setTokenSavingsBalance] = useState<TokenBalance>()\n\n\n    const messaging = useContext(MessagingContext)\n\n    useEffect(() => {\n        getTokenBalance(tokenAddress).then(setTokenBalance)\n        //getTokenSavingsBalance(tokenAddress).then(setTokenSavingsBalance)\n    }, [tokenAddress, messaging.state.length])\n\n    const tryCall = async (action: Function, sucessMessage: string) => {\n        try {\n            await action()\n            messaging.dispatcher({\n                message: {\n                    body: sucessMessage || \"Action completed!\",\n                    timestamp: Date.now(),\n                    type: 'success'\n                },\n                type: ActionTypes.ADD_MESSAGE\n            })\n\n        } catch (ex) {\n            let message = ex\n            if (ex.transactionHash) {\n                message = await getTransactionResult(ex.transactionHash)\n            }\n            else if (ex.message) {\n                message = ex.message\n            }\n            else if (typeof ex === 'string') {\n                message = ex\n            }\n            else {\n                message = \"Unhandled error\"\n            }\n\n            messaging.dispatcher({\n                message: {\n                    body: message,\n                    timestamp: Date.now(),\n                    type: 'error'\n                },\n                type: ActionTypes.ADD_MESSAGE\n            })\n        }\n    }\n\n    return (\n        <div style={{ display: 'flex', marginTop: '0.5rem' }}>\n            <Balance tokenName={tokenName} balance={tokenBalance}></Balance>\n            <span style={{ flexGrow: 2, flexBasis: '1rem', display: 'flex' }}>\n                {tokenBalance?.allowance.gt('0') ?\n                    (\n                        <React.Fragment>\n                            <span style={{ flexGrow: 1, display: \"flex\" }}>\n                                <input style={{ flexGrow: 1 }} onChange={(x) => {\n                                    try {\n                                        setDepositAmount(toBigNumber(x.target.value, 18))\n\n                                    } catch {\n                                        setDepositAmount(undefined)\n                                    }\n                                }}></input>\n                            </span>\n                            <span>\n                                <AsyncButton\n                                    key={tokenAddress}\n                                    disabled={depositAmount ? false : true}\n                                    onClick={() => depositAmount ? tryCall(() => deposit(tokenAddress, depositAmount), \"Deposit succeeded!\") : undefined}\n                                >\n                                    Deposit\n                                </AsyncButton>\n                            </span>\n                        </React.Fragment>\n                    )\n                    :\n                    (<AsyncButton\n                        key={tokenAddress}\n                        disabled={false}\n                        onClick={() => tryCall(() => approve(tokenAddress), \"Use of tokens approved\")}\n                    >\n                        Approve usage\n                    </AsyncButton>)\n                }\n\n            </span>\n        </div>\n\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { DepositAccount } from \"./DepositAccount\";\nimport { getAccounts, ProviderData } from \"./accounts\";\n\ntype DepositTapProps = {\n    providers: ProviderData[]\n}\n\nexport function DepositTap({ providers }: DepositTapProps) {\n    const [accounts, setAccounts] = useState<string[]>()\n\n    useEffect(() => {\n        //getAccounts().then(setAccounts)\n    }, [])\n\n\n\n    const depositable = providers.map(x => {\n        const accountItems = x.depositable?.map(x => {\n            return (<DepositAccount key={x.address} token={x} ></DepositAccount>)\n        })\n\n        return (\n            <div className=\"provider\">\n                {accountItems}\n            </div>\n        )\n    })\n\n\n\n    return (\n        <section>\n            {depositable}\n        </section>\n    )\n}","import React, { useState } from \"react\";\nimport './TabSwich.css'\n\ntype TabSwitchProp = {\n    children: any[]\n    labels: string[]\n}\n\nexport function TabSwitch({ children, labels }: TabSwitchProp) {\n    const [tabIndex, setTabIndex] = useState<number>(0)\n\n    const switches = Array.from({ length: children.length }, (x, i) =>\n        (\n            <div className={`switch-button ${ i === tabIndex ? \"selected\" : \"\"}`} onClick={()=>setTabIndex(i)}>\n                {labels[i]}\n            </div>\n        ))\n\n    return (\n        <div className=\"tab-container\">\n            <div className=\"switch-container\">\n                {switches}\n            </div>\n            {children[tabIndex]}\n        </div>\n    )\n}","import React, { Props, useContext, useEffect, useState } from 'react'\nimport { BigNumber } from 'ethers';\nimport { approve, deposit, getTokenBalance, getTokenName, getTokenSavingsBalance, getTransactionResult, ProviderData, TokenBalance, TokenData, withdraw } from './accounts';\nimport { AsyncButton } from './AsyncButton';\nimport { ActionTypes, MessagingContext } from './Messages';\nimport { Balance } from './Balance';\n\ntype AccountProps = {\n    tokenAddress?: TokenData\n    provider: ProviderData\n}\n\nconst FORMATTED_DECIMALS = 2\n\nconst toBigNumber = (value: any, to: number) => {\n    const decimals = Math.pow(10, FORMATTED_DECIMALS)\n    let base = ((typeof value == 'number') ? value : (typeof value === 'string' ? parseFloat(value) : BigNumber.from(value).toNumber()))\n    base = base * decimals\n\n    const by = BigNumber.from('1' + ''.padEnd(to - FORMATTED_DECIMALS, '0'))\n    return BigNumber.from(base.toFixed(0)).mul(by)\n\n}\n\nexport function WithdrawTokens({ tokenAddress: token, provider }: AccountProps) {\n    const [tokenName, setTokenName] = useState<string>('---')\n    const [selectedToken, setSelectedToken] = useState<string | undefined>(token?.address)\n    const [withdrawAmount, setWithdrawAmount] = useState<BigNumber>();\n\n    const [tokenBalance, setTokenBalance] = useState<TokenBalance>()\n    const [tokenSavingsBalance, setTokenSavingsBalance] = useState<TokenBalance>()\n\n\n    const messaging = useContext(MessagingContext)\n\n    useEffect(() => {\n        if (selectedToken) {\n            getTokenBalance(selectedToken).then(setTokenBalance)\n            getTokenSavingsBalance(selectedToken).then(setTokenSavingsBalance)\n        } else {\n            setTokenName('---')\n            setTokenBalance(undefined)\n            setTokenSavingsBalance(undefined)\n        }\n    }, [token, selectedToken, messaging.state.length])\n\n    const tryCall = async (action: Function, sucessMessage: string) => {\n        try {\n            await action()\n            messaging.dispatcher({\n                message: {\n                    body: sucessMessage || \"Action completed!\",\n                    timestamp: Date.now(),\n                    type: 'success'\n                },\n                type: ActionTypes.ADD_MESSAGE\n            })\n\n        } catch (ex) {\n            let message = ex\n            if (ex.transactionHash) {\n                message = await getTransactionResult(ex.transactionHash)\n            }\n            else if (ex.message) {\n                message = ex.message\n            }\n            else if (typeof ex === 'string') {\n                message = ex\n            }\n            else {\n                message = \"Unhandled error\"\n            }\n\n            messaging.dispatcher({\n                message: {\n                    body: message,\n                    timestamp: Date.now(),\n                    type: 'error'\n                },\n                type: ActionTypes.ADD_MESSAGE\n            })\n        }\n    }\n\n    return (\n        <div style={{ display: 'flex', marginTop: '0.5rem' }}>\n            <Balance tokenName={undefined} balance={tokenSavingsBalance}></Balance>\n            <span style={{ flexGrow: 4, flexBasis: '1rem', display: 'flex' }}>\n                <React.Fragment>\n                    <span style={{ flexShrink: 1, display: \"flex\" }}>\n                        <select\n                            defaultValue='-'\n                            onChange={(e) => setSelectedToken(e.target.value)} >\n                            <option value=\"-\" selected disabled>\n                               Select Token\n                            </option>\n                            {provider.depositable.map(x => (\n                                <option value={x.address}>\n                                    {x.name}\n                                </option>\n                            ))}\n                        </select>\n                    </span>\n                    <span style={{ flexGrow: 1, display: \"flex\" }}>\n                        <input style={{ flexGrow: 1 }} onChange={(x) => {\n                            try {\n                                setWithdrawAmount(toBigNumber(x.target.value, 18))\n\n                            } catch {\n                                setWithdrawAmount(undefined)\n                            }\n                        }}></input>\n                    </span>\n                    <span>\n                        <AsyncButton\n                            key={token?.address}\n                            disabled={withdrawAmount && selectedToken ? false : true}\n                            onClick={() => (withdrawAmount && selectedToken) ? tryCall(() => withdraw(selectedToken, withdrawAmount), \"Withdraw completed!\") : undefined}\n                        >\n                            Withdraw\n                        </AsyncButton>\n                    </span>\n                </React.Fragment>\n            </span>\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { ProviderData } from \"./accounts\";\nimport { WithdrawTokens } from \"./WithdrawTokens\";\n\ntype WithdrawTabProps = {\n    providers: ProviderData[]\n}\n\nexport function WithdrawTab({ providers }: WithdrawTabProps) {\n    const [accounts, setAccounts] = useState<string[]>()\n\n    useEffect(() => {\n        //getAccounts().then(setAccounts)\n    }, [])\n\n\n\n    const depositable = providers.map(x => {\n\n        // each provider might have it's own logic to withdraw\n        if (x.name === \"mStable\") {\n            //in mstable case, all the tokens are group together, so we cant show them individually\n            return (\n                <div className=\"provider\">\n                    <div>\n                        <strong>USD:</strong>\n                        <WithdrawTokens key={'mstablewithdraw'} provider={x} />\n                    </div>\n                </div>\n            )\n        } else {\n            const accountItems = x.depositable?.map(tokenAddress => {\n                return (\n                    <WithdrawTokens\n                        provider={x}\n                        key={`othercoins-${tokenAddress}`}\n                        tokenAddress={tokenAddress} />)\n            })\n            return (\n                <div className=\"provider\">\n                    <strong>Other tokens:</strong>\n                    <div>\n                        {accountItems}\n                    </div>\n                </div>\n            )\n        }\n\n\n    })\n\n\n\n    return (\n        <section>\n            {depositable}\n        </section>\n    )\n}","import { BigNumber } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { DepositAccount } from \"./DepositAccount\";\nimport { getAccounts, getAllProviders, ProviderData } from \"./accounts\";\nimport { DepositTap } from \"./DepositTab\";\nimport { TabSwitch } from \"./TabSwitch\";\nimport { WithdrawTab } from \"./WithdrawTab\";\n\ntype ConnectedProps = {\n    address: string\n}\n\nexport function Connected({ address }: ConnectedProps) {\n    const [providers, setProviders] = useState<ProviderData[]>([])\n\n    useEffect(() => {\n        console.log('effect')\n        getAllProviders().then(setProviders)\n        //getAccounts().then(setAccounts)\n    }, [address])\n\n\n    const formatAddress = (address: string) => {\n        const chars = 5\n        return `${address.substr(0, chars)}...${address.substr(address.length - chars, address.length)}`\n    }\n\n    return (<React.Fragment>\n        <div>\n            Connected with: {formatAddress(address)}\n        </div>\n        <TabSwitch labels={[\"Deposit\", \"Withdraw\"]}>\n            <DepositTap providers={providers}></DepositTap>\n            <WithdrawTab providers={providers}></WithdrawTab>\n        </TabSwitch>\n\n    </React.Fragment>)\n}","import React, { useContext, useEffect, useReducer, useState } from 'react';\nimport logo from './logo.webp';\nimport './App.css';\nimport { getConnectedAddress } from './accounts';\nimport { Connected } from './Connected';\nimport { ActionTypes, Messages, messaging, CurrentMessagingState, MessasingActionTypes, MessagingContext } from './Messages';\nimport { AsyncButton } from './AsyncButton';\n\nfunction App() {\n\n  const [connectedAddress, setConnectedAddress] = useState<string>()\n  const [state, dispatch] = useReducer(messaging, CurrentMessagingState)\n\n  console.log('messageReducer', state)\n\n\n  useEffect(() => {\n    getConnectedAddress().then(setConnectedAddress)\n\n  }, [connectedAddress])\n\n  return (\n    <MessagingContext.Provider value={{ state: state, dispatcher: dispatch }}>\n      <div className=\"App\">\n        <menu>\n          <img src={logo} height=\"100%\" />\n        </menu>\n        <header className=\"App-header\">\n          <h2>\n            Saving Accounts\n          </h2>\n          {connectedAddress ? <Connected address={connectedAddress} /> : (<div>Disconnected</div>)}\n        </header>\n        <Messages></Messages>\n\n      </div>\n    </MessagingContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
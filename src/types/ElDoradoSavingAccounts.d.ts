/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ElDoradoSavingAccountsInterface extends ethers.utils.Interface {
  functions: {
    "addProvider(address,address)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "depositAt(uint256,address,uint256)": FunctionFragment;
    "depositOn(address,uint256)": FunctionFragment;
    "getBalance()": FunctionFragment;
    "getEarnings()": FunctionFragment;
    "getProviderByIndex(uint256)": FunctionFragment;
    "providersCount()": FunctionFragment;
    "withdrawOn(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addProvider",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(
    functionFragment: "depositAt",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositOn",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getBalance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEarnings",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProviderByIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "providersCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawOn",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "addProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "depositAt", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "depositOn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getBalance", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getEarnings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProviderByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "providersCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "withdrawOn", data: BytesLike): Result;

  events: {};
}

export class ElDoradoSavingAccounts extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ElDoradoSavingAccountsInterface;

  functions: {
    addProvider(
      providerAddress: string,
      _tokenAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addProvider(address,address)"(
      providerAddress: string,
      _tokenAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOf(
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "balanceOf(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    depositAt(
      _providerIndex: BigNumberish,
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "depositAt(uint256,address,uint256)"(
      _providerIndex: BigNumberish,
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    depositOn(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "depositOn(address,uint256)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getBalance(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getBalance()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getEarnings(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getEarnings()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getProviderByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getProviderByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    providersCount(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "providersCount()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    withdrawOn(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdrawOn(address,uint256)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  addProvider(
    providerAddress: string,
    _tokenAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addProvider(address,address)"(
    providerAddress: string,
    _tokenAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balanceOf(address)"(
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  depositAt(
    _providerIndex: BigNumberish,
    _tokenAddress: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "depositAt(uint256,address,uint256)"(
    _providerIndex: BigNumberish,
    _tokenAddress: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  depositOn(
    _tokenAddress: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "depositOn(address,uint256)"(
    _tokenAddress: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getBalance(overrides?: CallOverrides): Promise<BigNumber>;

  "getBalance()"(overrides?: CallOverrides): Promise<BigNumber>;

  getEarnings(overrides?: CallOverrides): Promise<BigNumber>;

  "getEarnings()"(overrides?: CallOverrides): Promise<BigNumber>;

  getProviderByIndex(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getProviderByIndex(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  providersCount(overrides?: CallOverrides): Promise<BigNumber>;

  "providersCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  withdrawOn(
    _tokenAddress: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdrawOn(address,uint256)"(
    _tokenAddress: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    addProvider(
      providerAddress: string,
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addProvider(address,address)"(
      providerAddress: string,
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    depositAt(
      _providerIndex: BigNumberish,
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "depositAt(uint256,address,uint256)"(
      _providerIndex: BigNumberish,
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    depositOn(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "depositOn(address,uint256)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBalance(overrides?: CallOverrides): Promise<BigNumber>;

    "getBalance()"(overrides?: CallOverrides): Promise<BigNumber>;

    getEarnings(overrides?: CallOverrides): Promise<BigNumber>;

    "getEarnings()"(overrides?: CallOverrides): Promise<BigNumber>;

    getProviderByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getProviderByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    providersCount(overrides?: CallOverrides): Promise<BigNumber>;

    "providersCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    withdrawOn(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "withdrawOn(address,uint256)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    addProvider(
      providerAddress: string,
      _tokenAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addProvider(address,address)"(
      providerAddress: string,
      _tokenAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    depositAt(
      _providerIndex: BigNumberish,
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "depositAt(uint256,address,uint256)"(
      _providerIndex: BigNumberish,
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    depositOn(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "depositOn(address,uint256)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getBalance(overrides?: CallOverrides): Promise<BigNumber>;

    "getBalance()"(overrides?: CallOverrides): Promise<BigNumber>;

    getEarnings(overrides?: CallOverrides): Promise<BigNumber>;

    "getEarnings()"(overrides?: CallOverrides): Promise<BigNumber>;

    getProviderByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProviderByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    providersCount(overrides?: CallOverrides): Promise<BigNumber>;

    "providersCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    withdrawOn(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdrawOn(address,uint256)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addProvider(
      providerAddress: string,
      _tokenAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addProvider(address,address)"(
      providerAddress: string,
      _tokenAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOf(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    depositAt(
      _providerIndex: BigNumberish,
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "depositAt(uint256,address,uint256)"(
      _providerIndex: BigNumberish,
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    depositOn(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "depositOn(address,uint256)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getBalance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getBalance()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getEarnings(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getEarnings()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getProviderByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProviderByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    providersCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "providersCount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawOn(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdrawOn(address,uint256)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
